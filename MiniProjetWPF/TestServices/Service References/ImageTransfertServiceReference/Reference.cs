//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.586
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestServices.ImageTransfertServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhotoInfo", Namespace="http://schemas.datacontract.org/2004/07/ServiceWCF")]
    [System.SerializableAttribute()]
    public partial class PhotoInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        private int AlbumIdField;
        
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public int AlbumId {
            get {
                return this.AlbumIdField;
            }
            set {
                if ((this.AlbumIdField.Equals(value) != true)) {
                    this.AlbumIdField = value;
                    this.RaisePropertyChanged("AlbumId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ImageTransfertServiceReference.IImageTransfertService")]
    public interface IImageTransfertService {
        
        // CODEGEN : La génération du contrat de message depuis le nom de wrapper (Photo) du message Photo ne correspond pas à la valeur par défaut (Upload)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImageTransfertService/Upload", ReplyAction="http://tempuri.org/IImageTransfertService/UploadResponse")]
        TestServices.ImageTransfertServiceReference.PhotoId Upload(TestServices.ImageTransfertServiceReference.Photo request);
        
        // CODEGEN : La génération du contrat de message depuis le nom de wrapper (PhotoId) du message PhotoId ne correspond pas à la valeur par défaut (Download)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImageTransfertService/Download", ReplyAction="http://tempuri.org/IImageTransfertService/DownloadResponse")]
        TestServices.ImageTransfertServiceReference.Photo Download(TestServices.ImageTransfertServiceReference.PhotoId request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Photo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Photo {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public TestServices.ImageTransfertServiceReference.PhotoInfo PhotoInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream Blob;
        
        public Photo() {
        }
        
        public Photo(TestServices.ImageTransfertServiceReference.PhotoInfo PhotoInfo, System.IO.Stream Blob) {
            this.PhotoInfo = PhotoInfo;
            this.Blob = Blob;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="PhotoId", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class PhotoId {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int ID;
        
        public PhotoId() {
        }
        
        public PhotoId(int ID) {
            this.ID = ID;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IImageTransfertServiceChannel : TestServices.ImageTransfertServiceReference.IImageTransfertService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ImageTransfertServiceClient : System.ServiceModel.ClientBase<TestServices.ImageTransfertServiceReference.IImageTransfertService>, TestServices.ImageTransfertServiceReference.IImageTransfertService {
        
        public ImageTransfertServiceClient() {
        }
        
        public ImageTransfertServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ImageTransfertServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImageTransfertServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImageTransfertServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TestServices.ImageTransfertServiceReference.PhotoId TestServices.ImageTransfertServiceReference.IImageTransfertService.Upload(TestServices.ImageTransfertServiceReference.Photo request) {
            return base.Channel.Upload(request);
        }
        
        public int Upload(TestServices.ImageTransfertServiceReference.PhotoInfo PhotoInfo, System.IO.Stream Blob) {
            TestServices.ImageTransfertServiceReference.Photo inValue = new TestServices.ImageTransfertServiceReference.Photo();
            inValue.PhotoInfo = PhotoInfo;
            inValue.Blob = Blob;
            TestServices.ImageTransfertServiceReference.PhotoId retVal = ((TestServices.ImageTransfertServiceReference.IImageTransfertService)(this)).Upload(inValue);
            return retVal.ID;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TestServices.ImageTransfertServiceReference.Photo TestServices.ImageTransfertServiceReference.IImageTransfertService.Download(TestServices.ImageTransfertServiceReference.PhotoId request) {
            return base.Channel.Download(request);
        }
        
        public TestServices.ImageTransfertServiceReference.PhotoInfo Download(int ID, out System.IO.Stream Blob) {
            TestServices.ImageTransfertServiceReference.PhotoId inValue = new TestServices.ImageTransfertServiceReference.PhotoId();
            inValue.ID = ID;
            TestServices.ImageTransfertServiceReference.Photo retVal = ((TestServices.ImageTransfertServiceReference.IImageTransfertService)(this)).Download(inValue);
            Blob = retVal.Blob;
            return retVal.PhotoInfo;
        }
    }
}
